# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  #push:
  #  branches: 
  #    - "**"
  pull_request:
    branches: 
      - dev
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_backend:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/backend/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/backend/package-lock.json') }}
      - name: Install npm
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: |
          cd backend
          npm install
      - name: Build
        run: |
          cd backend
          npm run build
      

  build_frontend:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/backend/frontend/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/backend/frontend/package-lock.json') }}
      - name: Install npm
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: |
          cd backend/frontend
          npm install
      - name: Build
        run: |
          cd backend/frontend
          npm run build

  

  database:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Build the database
        run: |
          cd backend
          docker-compose up -d
          
          
  linter_frontend:
    runs-on: self-hosted
    needs: [build_frontend]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/backend/frontend/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/backend/frontend/package-lock.json') }}
      - name: run linter
        run: |
          cd backend/frontend
          npm run lint
        

  linter_backend:
    runs-on: self-hosted
    needs: [build_backend]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/backend/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/backend/package-lock.json') }}
      - name: run linter
        run: |
          cd backend
          npm run lint

  audit_frontend:
    runs-on: self-hosted
    needs: [build_frontend]
    steps:
      - uses: actions/checkout@v2
      - name: audit frontend
        run: |
          cd backend/frontend
          npm audit

  audit_backend:
    runs-on: self-hosted
    needs: [build_backend]
    steps:
      - uses: actions/checkout@v2
      - name: audit backend
        run: |
          cd backend
          npm audit

  test_frontend:
    runs-on: self-hosted
    needs: [build_frontend]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/backend/frontend/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/backend/frontend/package-lock.json') }}
      - name: run test
        run: |
          cd backend/frontend
          npm run test

  test_backend:
    runs-on: self-hosted
    needs: [build_backend]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/backend/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/backend/package-lock.json') }}
      - name: run test
        run: |
          cd backend
          npm run test
